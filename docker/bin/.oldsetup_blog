#!/bin/bash
#set -eo pipefail
set -a
echo 
echo

gotforit=$(etcdctl get jobs/done/setup 2>/dev/null) 
if [ $? -eq 0 ] ; then
    echo 
    echo "${BUDDY} ninja shell setup on ${goforit}"
    echo
    exit 0
fi

aws s3 ls s3://east1.seclab.ninja.$BUDDY/default
if [ $? -eq 0 ] ; then
    echo -n "Restore previous session? "
    read DOIT
    if [ "$DOIT" == "y" ] ; then
        echo "stand by, restoring . . ."
        getmeback
        etcdctl set jobs/done/setup "Restore from bucket on $(date)"
        exit
    fi
fi

if [ ! -f $HOME/.vimrc ] ; then
    echo "Setting up code editor . . . "
    mkdir -p $HOME/.vim/autoload
    mkdir -p $HOME/.vim/bundle
    curl -o $HOME/.vim/autoload/pathogen.vim -L https://raw.githubusercontent.com/tpope/vim-pathogen/master/autoload/pathogen.vim
cat > $HOME/.vimrc <<EOF
execute pathogen#infect()

filetype plugin indent on
syntax on
syntax enable
set background=dark
colorscheme solarized
set term=screen-256color
EOF

cd $HOME/.vim/bundle
git clone https://github.com/plasticboy/vim-markdown 
git clone https://github.com/pangloss/vim-javascript
git clone https://github.com/klen/python-mode
git clone https://github.com/ekalinin/dockerfile.vim
git clone https://github.com/othree/html5.vim
git clone https://github.com/valloric/youcompleteme
git clone https://github.com/elzr/vim-json
git clone git://github.com/altercation/vim-colors-solarized.git

fi

if [ -d $HOME/bin ] ; then
    echo "home already setup"
    exit 
fi


echo "Please wait $BUDDY for your ninja shell to be setup"
echo " "
echo "Once completed, your session will be logged out, when reconnected"
echo "you will be ready to use your shell."
echo 
sleep 7
echo "Starting ninja shell install and setup . . . "
sleep 5
echo "Please wait for your configuration to complete."
sleep 4


git config --global user.name "ctrl" 
git config --global user.email "ctrl@seclab" 
#git config --global http.sslCert "/tls/$BUDDY.cert.pem"
#git config --global http.sslKey "/tls/$BUDDY.key.pem" 
git config --global credential.helper store

session-create
source /.IPS

mygit="$(etcdctl --endpoints http://core.east1:2379 get ops/net/ninja/$BUDDY/git)"

jobstart "$$"
trap "jobtrace '$$'" 0 1 2 3 6

IFS=$'\n'
postmd="/ctrl/sysblog/source/_posts/Startup.md"
cd ~
etcdctl set ninja "$BUDDY"
        msgbus " cloning repo of bin tools "
git clone $mygit/ctrl/bin.git
        msgbus " cloning repo of node apps "
git clone $mygit/ctrl/node.git
#cd node
        msgbus " setup node apps "
#npm install
cd ~
        msgbus " cloning repo of sysblog "
git clone $mygit/ctrl/sysblog.git
echo
cd sysblog
sed -i "s/BUDDY/${BUDDY}/g" _config.yml
        msgbus " installing nodejs module support "
npm config set package-lock false
npm install
npm install hexo-generator-statics --save
#npm install --save hexo-cli-extras
msgbus " generating information posts"
echo "Creating tag and catagory pages"
hexo new page "tags"
echo "---" > source/tags/index.md
echo "title: All Tags" >> source/tags/index.md
echo "type: \"tags\"" >> source/tags/index.md
echo "---" >> source/tags/index.md
hexo new page "categories"
echo "---" > source/categories/index.md
echo "title: All Tags" >> source/categories/index.md
echo "type: \"categories\"" >> source/categories/index.md
echo "---" >> source/categories/index.md
echo " generating information posts for structure help. . . "
hexo new page "Permissions"
cat ~/Permissions.md >> source/Permissions/index.md 
rm -rf ~/Permissions.md
hexo new page "Trust"
cat ~/Trust.md >> source/Trust/index.md 
rm -rf ~/Trust.md
msgbus " generating new post"
echo "Local port 4000 mapped to => https://dev.${BUDDY}.seclab.ninja for testing apps" >> /ctrl/foot.md
hexo new "Startup"
echo " " >> $postmd
echo "# The situation as we know it. " >> $postmd
cat /ctrl/head.md >> $postmd
echo "https://shell.${BUDDY}.seclab.ninja" >> $postmd
echo "{% plantuml %} " >> $postmd
cat /ctrl/sysblog.pml >> $postmd
echo "{% endplantuml %}" >> $postmd
echo "==== " >> $postmd
cat /ctrl/foot.md >> $postmd
echo "\`\`\`code" >> $postmd
cat /ctrl/sysblog.pml >> $postmd
echo "\`\`\`" >> $postmd
hexo generate
rm -rf /ctrl/head.md
rm -rf /ctrl/foot.md
rm -rf /ctrl/sysblog.pml
msgbus " published to https://hack.securinglabs.online/${BUDDY}"
cd ~
#gitbook init doc
ARRK=($(ls -1 KEYSTORE*))
for (( i=0; i<${#ARRK[@]}; i++ )) ; do
    kfile="${ARRK[$i]}"
    echo "loading keys from ${kfile} "
    loadkeys ${kfile}
    msgbus "${kfile} values loaded "
    rm -rf ${kfile}
done
dumpkeys
etcdctl set jobs/done/setup "CAPTURE"
etcdctl set git "$mygit"
